[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 15.0.2)
[debug]       Load.loadUnit: plugins took 450.9076ms
[debug]       Load.loadUnit: defsScala took 0.3867ms
[debug] [Loading] Scanning directory C:\Users\Mitsaki\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Mitsaki\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 78.1946 ms
[debug]           Load.resolveProject(global-plugins) took 106.7681ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Mitsaki\.sbt\1.0\plugins, plugins: List(<none>))) took 255.9936ms
[debug] [Loading] Done in C:\Users\Mitsaki\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 350.4847ms
[debug]       Load.loadUnit: cleanEvalClasses took 2.1078ms
[debug]     Load.loadUnit(file:/C:/Users/Mitsaki/.sbt/1.0/plugins/, ...) took 834.8559ms
[debug]   Load.apply: load took 1419.6943ms
[debug]   Load.apply: resolveProjects took 17.2497ms
[debug]   Load.apply: finalTransforms took 222.5366ms
[debug]   Load.apply: config.delegates took 54.58ms
[debug]   Load.apply: Def.make(settings)... took 10356.3449ms
[debug]   Load.apply: structureIndex took 409.9347ms
[debug]   Load.apply: mkStreams took 3.0205ms
[info] loading global plugins from C:\Users\Mitsaki\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 18285.3719ms
[debug]           Load.loadUnit: plugins took 143.4933ms
[debug]           Load.loadUnit: defsScala took 0.0098ms
[debug] [Loading] Scanning directory D:\SimpleExamples\WebApi\project
[debug]             Load.loadUnit: mkEval took 22.8572ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\SimpleExamples\WebApi\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.3994 ms
[info] loading settings for project webapi-build from idea.sbt ...
[debug]               Load.resolveProject(webapi-build) took 7.1712ms
[debug]             Load.loadTransitive: finalizeProject(Project(id webapi-build, base: D:\SimpleExamples\WebApi\project, plugins: List(<none>))) took 15.3568ms
[debug] [Loading] Done in D:\SimpleExamples\WebApi\project, returning: (webapi-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 466.2713ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.1446ms
[debug]         Load.loadUnit(file:/D:/SimpleExamples/WebApi/project/, ...) took 626.7782ms
[debug]       Load.apply: load took 631.711ms
[debug]       Load.apply: resolveProjects took 0.4055ms
[debug]       Load.apply: finalTransforms took 39.5858ms
[debug]       Load.apply: config.delegates took 0.6509ms
[debug]       Load.apply: Def.make(settings)... took 416.3964ms
[debug]       Load.apply: structureIndex took 165.2795ms
[debug]       Load.apply: mkStreams took 0.003ms
[info] loading project definition from D:\SimpleExamples\WebApi\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2687.4546ms
[debug]     Load.loadUnit: defsScala took 0.0102ms
[debug] [Loading] Scanning directory D:\SimpleExamples\WebApi
[debug]       Load.loadUnit: mkEval took 0.6598ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\SimpleExamples\WebApi, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 8.921 ms
[info] loading settings for project webapi from build.sbt ...
[debug]         Load.resolveProject(webapi) took 136.3918ms
[debug]       Load.loadTransitive: finalizeProject(Project(id webapi, base: D:\SimpleExamples\WebApi, plugins: List(<none>))) took 149.3138ms
[debug] [Loading] Done in D:\SimpleExamples\WebApi, returning: (webapi)
[debug]     Load.loadUnit: loadedProjectsRaw took 438.1958ms
[debug]     Load.loadUnit: cleanEvalClasses took 33.1994ms
[debug]   Load.loadUnit(file:/D:/SimpleExamples/WebApi/, ...) took 3160.5668ms
[debug] Load.apply: load took 3164.6417ms
[debug] Load.apply: resolveProjects took 0.3374ms
[debug] Load.apply: finalTransforms took 88.3957ms
[debug] Load.apply: config.delegates took 0.5063ms
[debug] Load.apply: Def.make(settings)... took 375.0558ms
[debug] Load.apply: structureIndex took 144.6985ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to WebApi (in build file:/D:/SimpleExamples/WebApi/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51843 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51843, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to WebApi (in build file:/D:/SimpleExamples/WebApi/)
[debug] > Exec(idea-shell, None, None)
