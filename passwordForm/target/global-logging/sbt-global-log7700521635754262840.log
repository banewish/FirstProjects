[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (AdoptOpenJDK Java 11.0.9.1)
[debug]       Load.loadUnit: plugins took 231.5973ms
[debug]       Load.loadUnit: defsScala took 0.7119ms
[debug] [Loading] Scanning directory C:\Users\1\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\1\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 55.3666 ms
[debug]           Load.resolveProject(global-plugins) took 103.9977ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\1\.sbt\1.0\plugins, plugins: List(<none>))) took 240.4274ms
[debug] [Loading] Done in C:\Users\1\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 305.625ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.492ms
[debug]     Load.loadUnit(file:/C:/Users/1/.sbt/1.0/plugins/, ...) took 561.7402ms
[debug]   Load.apply: load took 1003.3841ms
[debug]   Load.apply: resolveProjects took 14.958ms
[debug]   Load.apply: finalTransforms took 144.8984ms
[debug]   Load.apply: config.delegates took 22.0311ms
[debug]   Load.apply: Def.make(settings)... took 3916.155ms
[debug]   Load.apply: structureIndex took 218.9341ms
[debug]   Load.apply: mkStreams took 2.9968ms
[info] loading global plugins from C:\Users\1\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8791.7734ms
[debug]           Load.loadUnit: plugins took 46.9153ms
[debug]           Load.loadUnit: defsScala took 0.005ms
[debug] [Loading] Scanning directory C:\scala\passwordForm\project
[debug]             Load.loadUnit: mkEval took 10.9584ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\scala\passwordForm\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.4943 ms
[info] loading settings for project passwordform-build from idea.sbt ...
[debug]               Load.resolveProject(passwordform-build) took 18.7466ms
[debug]             Load.loadTransitive: finalizeProject(Project(id passwordform-build, base: C:\scala\passwordForm\project, plugins: List(<none>))) took 23.1662ms
[debug] [Loading] Done in C:\scala\passwordForm\project, returning: (passwordform-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5523.5744ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.7186ms
[debug]         Load.loadUnit(file:/C:/scala/passwordForm/project/, ...) took 5579.571ms
[debug]       Load.apply: load took 5582.1616ms
[debug]       Load.apply: resolveProjects took 0.2083ms
[debug]       Load.apply: finalTransforms took 17.798ms
[debug]       Load.apply: config.delegates took 0.6007ms
[debug]       Load.apply: Def.make(settings)... took 295.9087ms
[debug]       Load.apply: structureIndex took 74.1712ms
[debug]       Load.apply: mkStreams took 0.0046ms
[info] loading project definition from C:\scala\passwordForm\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 9636.7702ms
[debug]     Load.loadUnit: defsScala took 0.0094ms
[debug] [Loading] Scanning directory C:\scala\passwordForm
[debug]       Load.loadUnit: mkEval took 0.4726ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\scala\passwordForm, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.9168 ms
[info] loading settings for project passwordform from build.sbt ...
[debug]         Load.resolveProject(passwordform) took 89.7903ms
[debug]       Load.loadTransitive: finalizeProject(Project(id passwordform, base: C:\scala\passwordForm, plugins: List(<none>))) took 97.8646ms
[debug] [Loading] Done in C:\scala\passwordForm, returning: (passwordform)
[debug]     Load.loadUnit: loadedProjectsRaw took 4033.0235ms
[debug]     Load.loadUnit: cleanEvalClasses took 44.433ms
[debug]   Load.loadUnit(file:/C:/scala/passwordForm/, ...) took 13715.3091ms
[debug] Load.apply: load took 13718.7292ms
[debug] Load.apply: resolveProjects took 0.6895ms
[debug] Load.apply: finalTransforms took 48.4066ms
[debug] Load.apply: config.delegates took 0.428ms
[debug] Load.apply: Def.make(settings)... took 219.6095ms
[debug] Load.apply: structureIndex took 39.8085ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to passwordForm (in build file:/C:/scala/passwordForm/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59482 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59482, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to passwordForm (in build file:/C:/scala/passwordForm/)
[debug] > Exec(idea-shell, None, None)
