[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\1\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\1\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (AdoptOpenJDK Java 11.0.9.1)
[debug]       Load.loadUnit: plugins took 171.0669ms
[debug]       Load.loadUnit: defsScala took 0.5222ms
[debug] [Loading] Scanning directory C:\Users\1\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\1\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 43.2795 ms
[debug]           Load.resolveProject(global-plugins) took 84.2392ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\1\.sbt\1.0\plugins, plugins: List(<none>))) took 186.5568ms
[debug] [Loading] Done in C:\Users\1\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 234.4993ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4719ms
[debug]     Load.loadUnit(file:/C:/Users/1/.sbt/1.0/plugins/, ...) took 423.9817ms
[debug]   Load.apply: load took 851.8816ms
[debug]   Load.apply: resolveProjects took 22.4581ms
[debug]   Load.apply: finalTransforms took 141.5111ms
[debug]   Load.apply: config.delegates took 15.8189ms
[debug]   Load.apply: Def.make(settings)... took 1821.583ms
[debug]   Load.apply: structureIndex took 236.646ms
[debug]   Load.apply: mkStreams took 3.2606ms
[info] loading global plugins from C:\Users\1\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7574.058ms
[debug]           Load.loadUnit: plugins took 56.115ms
[debug]           Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory C:\scala\passwordForm\project
[debug]             Load.loadUnit: mkEval took 10.7154ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\scala\passwordForm\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.6815 ms
[info] loading settings for project passwordform-build from idea.sbt ...
[debug]               Load.resolveProject(passwordform-build) took 5.3776ms
[debug]             Load.loadTransitive: finalizeProject(Project(id passwordform-build, base: C:\scala\passwordForm\project, plugins: List(<none>))) took 10.1941ms
[debug] [Loading] Done in C:\scala\passwordForm\project, returning: (passwordform-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 217.6112ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.1172ms
[debug]         Load.loadUnit(file:/C:/scala/passwordForm/project/, ...) took 283.1359ms
[debug]       Load.apply: load took 288.5673ms
[debug]       Load.apply: resolveProjects took 0.3053ms
[debug]       Load.apply: finalTransforms took 13.2947ms
[debug]       Load.apply: config.delegates took 0.5801ms
[debug]       Load.apply: Def.make(settings)... took 272.7977ms
[debug]       Load.apply: structureIndex took 81.3999ms
[debug]       Load.apply: mkStreams took 0.0039ms
[info] loading project definition from C:\scala\passwordForm\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3234.6631ms
[debug]     Load.loadUnit: defsScala took 0.0087ms
[debug] [Loading] Scanning directory C:\scala\passwordForm
[debug]       Load.loadUnit: mkEval took 0.4864ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\scala\passwordForm, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.9349 ms
[info] loading settings for project passwordform from build.sbt ...
[debug]         Load.resolveProject(passwordform) took 64.8145ms
[debug]       Load.loadTransitive: finalizeProject(Project(id passwordform, base: C:\scala\passwordForm, plugins: List(<none>))) took 71.0397ms
[debug] [Loading] Done in C:\scala\passwordForm, returning: (passwordform)
[debug]     Load.loadUnit: loadedProjectsRaw took 7755.3807ms
[debug]     Load.loadUnit: cleanEvalClasses took 25.3729ms
[debug]   Load.loadUnit(file:/C:/scala/passwordForm/, ...) took 11016.5473ms
[debug] Load.apply: load took 11021.8581ms
[debug] Load.apply: resolveProjects took 0.1693ms
[debug] Load.apply: finalTransforms took 40.3139ms
[debug] Load.apply: config.delegates took 0.4432ms
[debug] Load.apply: Def.make(settings)... took 190.6498ms
[debug] Load.apply: structureIndex took 39.4778ms
[debug] Load.apply: mkStreams took 0.0045ms
[info] set current project to passwordForm (in build file:/C:/scala/passwordForm/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60537 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60537, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to passwordForm (in build file:/C:/scala/passwordForm/)
[debug] > Exec(idea-shell, None, None)
